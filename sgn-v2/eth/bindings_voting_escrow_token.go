// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package eth

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// VotingEscrowTokenMetaData contains all meta data concerning the VotingEscrowToken contract.
var VotingEscrowTokenMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"locker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"lockTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockType\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"name\":\"SupplyChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"locker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ACTION_CREATE_LOCK\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ACTION_DEPOSIT_FOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ACTION_INCREASE_LOCK_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ACTION_INCREASE_UNLOCK_TIME\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_LOCK\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MULTIPLIER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WEEK\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"balanceOfAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_unlockTime\",\"type\":\"uint256\"}],\"name\":\"createLock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_for\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"epoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"increaseLockAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newUnlockTime\",\"type\":\"uint256\"}],\"name\":\"increaseUnlockTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"locks\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"amount\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pointHistory\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"bias\",\"type\":\"int128\"},{\"internalType\":\"int128\",\"name\":\"slope\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"slopeChanges\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"totalSupplyAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userPointEpoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userPointHistory\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"bias\",\"type\":\"int128\"},{\"internalType\":\"int128\",\"name\":\"slope\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "0x60806040523480156200001157600080fd5b5060405162002c8638038062002c8683398101604081905262000034916200029c565b6001600081815581546001600160a01b0384166001600160a01b03199091168117835560408051608081018252838152602080820185815242838501908152436060850190815260058054998a0181558852935191516001600160801b03908116600160801b0292169190911760039097027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0810197909755517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db187015590517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db290950194909455805163313ce56760e01b815290519293919263313ce567926004808401939192918290030181865afa15801562000157573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200017d9190620002ce565b600b805460ff191660ff8316179055604080518082019091526005808252647665434e4f60d81b6020909201918252919250620001be9160099190620001f6565b50604080518082019091526005808252647665434e4f60d81b6020909201918252620001ed91600a91620001f6565b5050506200032f565b8280546200020490620002f3565b90600052602060002090601f01602090048101928262000228576000855562000273565b82601f106200024357805160ff191683800117855562000273565b8280016001018555821562000273579182015b828111156200027357825182559160200191906001019062000256565b506200028192915062000285565b5090565b5b8082111562000281576000815560010162000286565b600060208284031215620002af57600080fd5b81516001600160a01b0381168114620002c757600080fd5b9392505050565b600060208284031215620002e157600080fd5b815160ff81168114620002c757600080fd5b600181811c908216806200030857607f821691505b6020821081036200032957634e487b7160e01b600052602260045260246000fd5b50919050565b612947806200033f6000396000f3fe608060405234801561001057600080fd5b50600436106101c35760003560e01c806367e7a7cb116100f9578063981b24d011610097578063f2c7a81b11610071578063f2c7a81b146103ad578063f4359ce5146103b5578063f52a36f7146103bf578063fc0c546a146103f557600080fd5b8063981b24d01461037f578063b52c05fe14610392578063c2c4c5c1146103a557600080fd5b806381fc83bb116100d357806381fc83bb1461033b5780638ad4c4471461035b578063900cf0cf1461036e57806395d89b411461037757600080fd5b806367e7a7cb1461030d57806370a08231146103155780637c616fe61461032857600080fd5b8063313ce56711610166578063403f444711610140578063403f4447146102975780634ee2cd7e146102aa5780635de9a137146102bd57806365a5d5f01461030557600080fd5b8063313ce5671461023557806334d901a4146102545780633ccfd60b1461028f57600080fd5b8063059f8b16116101a2578063059f8b16146101f457806306fdde031461020357806318160ddd146102185780632f4f21e21461022057600080fd5b8062b79fd4146101c857806302641632146101e3578063047fc9aa146101eb575b600080fd5b6101d0600081565b6040519081526020015b60405180910390f35b6101d0600381565b6101d060025481565b6101d0670de0b6b3a764000081565b61020b610420565b6040516101da9190612589565b6101d06104ae565b61023361022e3660046125d8565b61051e565b005b600b546102429060ff1681565b60405160ff90911681526020016101da565b6102676102623660046125d8565b6106b2565b60408051600f95860b81529390940b60208401529282015260608101919091526080016101da565b610233610702565b6102336102a5366004612602565b6108fb565b6101d06102b83660046125d8565b610ab7565b6102eb6102cb36600461261b565b60036020526000908152604090208054600190910154600f9190910b9082565b60408051600f9390930b83526020830191909152016101da565b6101d0610d81565b6101d0600181565b6101d061032336600461261b565b610d9e565b610233610336366004612602565b610e92565b6101d061034936600461261b565b60076020526000908152604090205481565b610267610369366004612602565b6110db565b6101d060045481565b61020b61111f565b6101d061038d366004612602565b61112c565b6102336103a0366004612636565b611327565b610233611568565b6101d0600281565b6101d062093a8081565b6103e26103cd366004612602565b600860205260009081526040902054600f0b81565b604051600f9190910b81526020016101da565b600154610408906001600160a01b031681565b6040516001600160a01b0390911681526020016101da565b6009805461042d90612658565b80601f016020809104026020016040519081016040528092919081815260200182805461045990612658565b80156104a65780601f1061047b576101008083540402835291602001916104a6565b820191906000526020600020905b81548152906001019060200180831161048957829003601f168201915b505050505081565b60006105196005600454815481106104c8576104c8612692565b60009182526020918290206040805160808101825260039093029091018054600f81810b8552600160801b909104900b9383019390935260018301549082015260029091015460608201524261158c565b905090565b6002600054036105755760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b600260009081556040805180820182526001600160a01b038516808452600360208181529385208054600f0b84529190945292825260019092015490820152816105ef5760405162461bcd60e51b815260206004820152600b60248201526a1898590817d85b5bdd5b9d60aa1b604482015260640161056c565b60008160000151600f0b136106465760405162461bcd60e51b815260206004820152600e60248201527f6c6f636b206e6f74206578697374000000000000000000000000000000000000604482015260640161056c565b428160200151116106995760405162461bcd60e51b815260206004820152601d60248201527f6c6f636b20657870697265642e20706c65617365207769746864726177000000604482015260640161056c565b6106a883836000846000611683565b5050600160005550565b600660205281600052604060002081815481106106ce57600080fd5b6000918252602090912060039091020180546001820154600290920154600f82810b9550600160801b90920490910b925084565b6002600054036107545760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161056c565b600260009081553381526003602090815260409182902082518084019093528054600f0b8352600101549082018190524210156107d35760405162461bcd60e51b815260206004820152601060248201527f6c6f636b206e6f74206578706972656400000000000000000000000000000000604482015260640161056c565b60006107e58260000151600f0b6117e0565b6040805180820182528451600f0b8152602080860180518284015260008082528088523381526003909252929020855181546fffffffffffffffffffffffffffffffff19166001600160801b0390911617815591516001909201919091556002549192509061085483826126be565b600255610862338386611836565b600154610879906001600160a01b03163385611ffb565b6040805184815242602082015233917f92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc6910160405180910390a26002546040805183815260208101929092527fed89e864eaa767d73408242ff6a09be53504bda6578087e3cc94dc198390488c910160405180910390a1505060016000555050565b333b15801561090957503233145b6109405760405162461bcd60e51b81526020600482015260086024820152676f6e6c7920454f4160c01b604482015260640161056c565b6002600054036109925760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161056c565b6002600090815560408051808201825233808452600360208181529385208054600f0b8452919094529282526001909201549082015281610a035760405162461bcd60e51b815260206004820152600b60248201526a1898590817d85b5bdd5b9d60aa1b604482015260640161056c565b60008160000151600f0b13610a4c5760405162461bcd60e51b815260206004820152600f60248201526e6c6f636b206e6f742065786973747360881b604482015260640161056c565b42816020015111610a9f5760405162461bcd60e51b815260206004820152601d60248201527f6c6f636b20657870697265642e20706c65617365207769746864726177000000604482015260640161056c565b610aae33836000846002611683565b50506001600055565b600043821115610afc5760405162461bcd60e51b815260206004820152601060248201526f3130b2102fb13637b1b5a73ab6b132b960811b604482015260640161056c565b6000610b088484612090565b905080600003610b1c576000915050610d7b565b6001600160a01b0384166000908152600660205260408120805483908110610b4657610b46612692565b600091825260208083206040805160808101825260039094029091018054600f81810b8652600160801b909104900b9284019290925260018201549083015260020154606082015260045490925090610b9f868361215a565b9050600060058281548110610bb657610bb6612692565b600091825260208083206040805160808101825260039094029091018054600f81810b8652600160801b909104900b9284019290925260018201549083015260020154606082015291508084841015610ca45760006005610c188660016126d5565b81548110610c2857610c28612692565b60009182526020918290206040805160808101825260039093029091018054600f81810b8552600160801b909104900b938301939093526001830154908201526002909101546060808301829052860151919250610c8691906126be565b925083604001518160400151610c9c91906126be565b915050610cc8565b6060830151610cb390436126be565b9150826040015142610cc591906126be565b90505b60408301518215610d05578284606001518b610ce491906126be565b610cee90846126ed565b610cf89190612722565b610d0290826126d5565b90505b610d1d876040015182610d1891906126be565b6121ea565b8760200151610d2c9190612736565b87518890610d3b9083906127d4565b600f90810b90915288516000910b12159050610d6257600098505050505050505050610d7b565b8651610d7090600f0b6117e0565b985050505050505050505b92915050565b6001610d9162093a8060d06126ed565b610d9b91906126be565b81565b6001600160a01b038116600090815260076020526040812054808203610dc75750600092915050565b6001600160a01b0383166000908152600660205260408120805483908110610df157610df1612692565b60009182526020918290206040805160808101825260039093029091018054600f81810b8552600160801b909104900b93830193909352600183015490820181905260029092015460608201529150610e4e90610d1890426126be565b8160200151610e5d9190612736565b8151610e6991906127d4565b600f0b80825260001315610e7c57600081525b8051610e8a90600f0b6117e0565b949350505050565b333b158015610ea057503233145b610ed75760405162461bcd60e51b81526020600482015260086024820152676f6e6c7920454f4160c01b604482015260640161056c565b600260005403610f295760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161056c565b6002600090815560408051808201825233808452600360208181529385208054600f0b84529190945292825260019092015490820152610f6882612286565b915060008160000151600f0b13610fb35760405162461bcd60e51b815260206004820152600f60248201526e6c6f636b206e6f742065786973747360881b604482015260640161056c565b428160200151116110065760405162461bcd60e51b815260206004820152601d60248201527f6c6f636b20657870697265642e20706c65617365207769746864726177000000604482015260640161056c565b806020015182116110595760405162461bcd60e51b815260206004820152601060248201527f6f6e6c7920657874656e64206c6f636b00000000000000000000000000000000604482015260640161056c565b600161106962093a8060d06126ed565b61107391906126be565b61107d90426126d5565b8211156110cc5760405162461bcd60e51b815260206004820152600b60248201527f34207965617273206d6178000000000000000000000000000000000000000000604482015260640161056c565b610aae33600084846003611683565b600581815481106110eb57600080fd5b6000918252602090912060039091020180546001820154600290920154600f82810b9450600160801b90920490910b919084565b600a805461042d90612658565b6000438211156111715760405162461bcd60e51b815260206004820152601060248201526f3130b2102fb13637b1b5a73ab6b132b960811b604482015260640161056c565b6004546000611180848361215a565b905060006005828154811061119757611197612692565b600091825260208083206040805160808101825260039094029091018054600f81810b8652600160801b909104900b928401929092526001820154908301526002015460608201529150838310156112b557600060056111f88560016126d5565b8154811061120857611208612692565b60009182526020918290206040805160808101825260039093029091018054600f81810b8552600160801b909104900b938301939093526001830154908201526002909101546060808301829052850151919250146112af578260600151816060015161127591906126be565b8360400151826040015161128991906126be565b6060850151611298908a6126be565b6112a291906126ed565b6112ac9190612722565b91505b50611304565b438260600151146113045760608201516112cf90436126be565b60408301516112de90426126be565b60608401516112ed90896126be565b6112f791906126ed565b6113019190612722565b90505b61131d8282846040015161131891906126d5565b61158c565b9695505050505050565b333b15801561133557503233145b61136c5760405162461bcd60e51b81526020600482015260086024820152676f6e6c7920454f4160c01b604482015260640161056c565b6002600054036113be5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161056c565b60026000556113cc81612286565b3360009081526003602090815260409182902082518084019093528054600f0b83526001015490820152909150826114465760405162461bcd60e51b815260206004820152600a60248201527f62616420616d6f756e7400000000000000000000000000000000000000000000604482015260640161056c565b8051600f0b156114985760405162461bcd60e51b815260206004820152600e60248201527f616c7265616479206c6f636b6564000000000000000000000000000000000000604482015260640161056c565b4282116114e75760405162461bcd60e51b815260206004820152601a60248201527f63616e206f6e6c79206c6f636b20756e74696c20667574757265000000000000604482015260640161056c565b60016114f762093a8060d06126ed565b61150191906126be565b61150b90426126d5565b82111561155a5760405162461bcd60e51b815260206004820152601960248201527f63616e206f6e6c79206c6f636b2034207965617273206d617800000000000000604482015260640161056c565b6106a8338484846001611683565b60408051808201909152600080825260208201819052611589908280611836565b50565b60008083905060006115a18560400151612286565b905060005b60ff811015611656576115bc62093a80836126d5565b91506000858311156115d0578592506115e4565b50600082815260086020526040902054600f0b5b6115f7846040015184610d1891906126be565b84602001516116069190612736565b845161161291906127d4565b600f0b84528583036116245750611656565b8084602001516116349190612824565b600f0b602085015250604083018290528061164e81612873565b9150506115a6565b5060008260000151600f0b121561166c57600082525b815161167a90600f0b6117e0565b95945050505050565b60025461169085826126d5565b600255604080518082019091528351600f0b8152602080850151908201526116b7866121ea565b81516116c39190612824565b600f0b815284156116d657602081018590525b6001600160a01b0387166000908152600360209081526040909120825181546fffffffffffffffffffffffffffffffff19166001600160801b039091161781559082015160019091015561172b878583611836565b851561174957600154611749906001600160a01b03163330896122a0565b602080820151604080518981529283018690524290830152906001600160a01b038916907fe3b53cd1a44fbf11535e145d80b8ef1ed6d57a73bf5daa7e939b6b01657d65499060600160405180910390a36002546040805184815260208101929092527fed89e864eaa767d73408242ff6a09be53504bda6578087e3cc94dc198390488c910160405180910390a150505050505050565b6000808212156118325760405162461bcd60e51b815260206004820181905260248201527f53616665436173743a2076616c7565206d75737420626520706f736974697665604482015260640161056c565b5090565b6040805160808082018352600080835260208084018290528385018290526060808501839052855193840186528284529083018290529382018190529281018390526004549192909181906001600160a01b03881615611add574287602001511180156118aa575060008760000151600f0b135b1561190b576118cc60016118c262093a8060d06126ed565b610d1891906126be565b87516118d8919061288c565b600f0b6020808701919091528701516118f690610d189042906126be565b85602001516119059190612736565b600f0b85525b428660200151118015611925575060008660000151600f0b135b1561197c5761193d60016118c262093a8060d06126ed565b8651611949919061288c565b600f0b60208086019190915286015161196790610d189042906126be565b84602001516119769190612736565b600f0b84525b6001600160a01b03881660009081526007602052604081205490819003611a03576001600160a01b0389166000908152600660209081526040808320805460018181018355918552938390208a51938b01516001600160801b03908116600160801b0294169390931760039094029092019283558801519082015560608701516002909101555b611a0e8160016126d5565b6001600160a01b038a16600081815260076020908152604080832094909455428985019081524360608b01908152938352600682528483208054600181810183559185528385208c518d8601516001600160801b03908116600160801b0291161760039092020190815591519082015592516002909301929092558a820151815260088252919091205490880151600f9190910b945015611adb578760200151876020015103611ac057839250611adb565b602080880151600090815260089091526040902054600f0b92505b505b604080516080810182526000808252602082015242918101919091524360608201528115611b665760058281548110611b1857611b18612692565b60009182526020918290206040805160808101825260039093029091018054600f81810b8552600160801b909104900b93830193909352600183015490820152600290910154606082015290505b604080820180518251608081018452600080825260208201819052835194820194909452606080860151908201529151909290421115611bdd576040840151611baf90426126be565b6060850151611bbe90436126be565b611bd090670de0b6b3a76400006126ed565b611bda9190612722565b90505b6000611be884612286565b905060005b60ff811015611dcd57611c0362093a80836126d5565b9150600042831115611c1757429250611c2b565b50600082815260086020526040902054600f0b5b6000611c3a610d1888866126be565b8860200151611c499190612736565b8851909150611c599082906127d4565b600f0b88526020880151611c6e908390612824565b600f90810b60208a015288516000910b1215611c8957600088525b60008860200151600f0b1215611ca157600060208901525b60408089018590528601519396508693670de0b6b3a764000090611cc590866126be565b611ccf90876126ed565b611cd99190612722565b8660600151611ce891906126d5565b6060890152611cf88960016126d5565b9850428403611d0e575050436060870152611dcd565b60058054600181018255600091909152885160208a01516001600160801b03908116600160801b0291161760039091027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db081019190915560408901517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db182015560608901517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db29091015550508080611dc590612873565b915050611bed565b5060048690556001600160a01b038d1615611e5a57896020015189602001518660200151611dfb9190612824565b611e0591906127d4565b600f0b6020860152895189518651611e1d9190612824565b611e2791906127d4565b600f90810b865260208601516000910b1215611e4557600060208601525b60008560000151600f0b1215611e5a57600085525b60058054600181018255600091909152855160208701516001600160801b03908116600160801b0291161760039091027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db081019190915560408601517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db182015560608601517f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db2909101556001600160a01b038d1615611fec57428c602001511115611f885760208a0151611f2e9089612824565b97508b602001518b6020015103611f51576020890151611f4e90896127d4565b97505b60208c810151600090815260089091526040902080546fffffffffffffffffffffffffffffffff19166001600160801b038a161790555b428b602001511115611fec578b602001518b602001511115611fec576020890151611fb390886127d4565b60208c810151600090815260089091526040902080546fffffffffffffffffffffffffffffffff19166001600160801b03831617905596505b50505050505050505050505050565b6040516001600160a01b03831660248201526044810182905261208b90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526122de565b505050565b6001600160a01b0382166000908152600760205260408120548190815b6080811015612150578183101561215057600060026120cc84866126d5565b6120d79060016126d5565b6120e19190612722565b6001600160a01b0388166000908152600660205260409020805491925087918390811061211057612110612692565b9060005260206000209060030201600201541161212f5780935061213d565b61213a6001826126be565b92505b508061214881612873565b9150506120ad565b5090949350505050565b60008082815b60808110156121505781831015612150576000600261217f84866126d5565b61218a9060016126d5565b6121949190612722565b905086600582815481106121aa576121aa612692565b906000526020600020906003020160020154116121c9578093506121d7565b6121d46001826126be565b92505b50806121e281612873565b915050612160565b60006f7fffffffffffffffffffffffffffffff198212801590612214575060016001607f1b038213155b6118325760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203160448201527f3238206269747300000000000000000000000000000000000000000000000000606482015260840161056c565b600062093a806122968184612722565b610d7b91906126ed565b6040516001600160a01b03808516602483015283166044820152606481018290526122d89085906323b872dd60e01b90608401612027565b50505050565b6000612333826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166123c39092919063ffffffff16565b80519091501561208b578080602001905181019061235191906128d3565b61208b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161056c565b60606123d284846000856123dc565b90505b9392505050565b6060824710156124545760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161056c565b6001600160a01b0385163b6124ab5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161056c565b600080866001600160a01b031685876040516124c791906128f5565b60006040518083038185875af1925050503d8060008114612504576040519150601f19603f3d011682016040523d82523d6000602084013e612509565b606091505b5091509150612519828286612524565b979650505050505050565b606083156125335750816123d5565b8251156125435782518084602001fd5b8160405162461bcd60e51b815260040161056c9190612589565b60005b83811015612578578181015183820152602001612560565b838111156122d85750506000910152565b60208152600082518060208401526125a881604085016020870161255d565b601f01601f19169190910160400192915050565b80356001600160a01b03811681146125d357600080fd5b919050565b600080604083850312156125eb57600080fd5b6125f4836125bc565b946020939093013593505050565b60006020828403121561261457600080fd5b5035919050565b60006020828403121561262d57600080fd5b6123d5826125bc565b6000806040838503121561264957600080fd5b50508035926020909101359150565b600181811c9082168061266c57607f821691505b60208210810361268c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156126d0576126d06126a8565b500390565b600082198211156126e8576126e86126a8565b500190565b6000816000190483118215151615612707576127076126a8565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826127315761273161270c565b500490565b600081600f0b83600f0b60016001607f1b03600082136000841383830485118282161615612766576127666126a8565b6f7fffffffffffffffffffffffffffffff196000851282811687830587121615612792576127926126a8565b600087129250858205871284841616156127ae576127ae6126a8565b858505871281841616156127c4576127c46126a8565b5050509290910295945050505050565b600081600f0b83600f0b600081128160016001607f1b0319018312811516156127ff576127ff6126a8565b8160016001607f1b0301831381161561281a5761281a6126a8565b5090039392505050565b600081600f0b83600f0b600082128260016001607f1b030382138115161561284e5761284e6126a8565b8260016001607f1b031903821281161561286a5761286a6126a8565b50019392505050565b600060018201612885576128856126a8565b5060010190565b600081600f0b83600f0b806128a3576128a361270c565b6f7fffffffffffffffffffffffffffffff198214600019821416156128ca576128ca6126a8565b90059392505050565b6000602082840312156128e557600080fd5b815180151581146123d557600080fd5b6000825161290781846020870161255d565b919091019291505056fea26469706673582212209786904ceb02c9818738eb08c9ccbcf0cc7cc483c5b02b19570625e2ebdb922064736f6c634300080e0033",
}

// VotingEscrowTokenABI is the input ABI used to generate the binding from.
// Deprecated: Use VotingEscrowTokenMetaData.ABI instead.
var VotingEscrowTokenABI = VotingEscrowTokenMetaData.ABI

// VotingEscrowTokenBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use VotingEscrowTokenMetaData.Bin instead.
var VotingEscrowTokenBin = VotingEscrowTokenMetaData.Bin

// DeployVotingEscrowToken deploys a new Ethereum contract, binding an instance of VotingEscrowToken to it.
func DeployVotingEscrowToken(auth *bind.TransactOpts, backend bind.ContractBackend, _token common.Address) (common.Address, *types.Transaction, *VotingEscrowToken, error) {
	parsed, err := VotingEscrowTokenMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(VotingEscrowTokenBin), backend, _token)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &VotingEscrowToken{VotingEscrowTokenCaller: VotingEscrowTokenCaller{contract: contract}, VotingEscrowTokenTransactor: VotingEscrowTokenTransactor{contract: contract}, VotingEscrowTokenFilterer: VotingEscrowTokenFilterer{contract: contract}}, nil
}

// VotingEscrowToken is an auto generated Go binding around an Ethereum contract.
type VotingEscrowToken struct {
	VotingEscrowTokenCaller     // Read-only binding to the contract
	VotingEscrowTokenTransactor // Write-only binding to the contract
	VotingEscrowTokenFilterer   // Log filterer for contract events
}

// VotingEscrowTokenCaller is an auto generated read-only Go binding around an Ethereum contract.
type VotingEscrowTokenCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// VotingEscrowTokenTransactor is an auto generated write-only Go binding around an Ethereum contract.
type VotingEscrowTokenTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// VotingEscrowTokenFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type VotingEscrowTokenFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// VotingEscrowTokenSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type VotingEscrowTokenSession struct {
	Contract     *VotingEscrowToken // Generic contract binding to set the session for
	CallOpts     bind.CallOpts      // Call options to use throughout this session
	TransactOpts bind.TransactOpts  // Transaction auth options to use throughout this session
}

// VotingEscrowTokenCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type VotingEscrowTokenCallerSession struct {
	Contract *VotingEscrowTokenCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts            // Call options to use throughout this session
}

// VotingEscrowTokenTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type VotingEscrowTokenTransactorSession struct {
	Contract     *VotingEscrowTokenTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts            // Transaction auth options to use throughout this session
}

// VotingEscrowTokenRaw is an auto generated low-level Go binding around an Ethereum contract.
type VotingEscrowTokenRaw struct {
	Contract *VotingEscrowToken // Generic contract binding to access the raw methods on
}

// VotingEscrowTokenCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type VotingEscrowTokenCallerRaw struct {
	Contract *VotingEscrowTokenCaller // Generic read-only contract binding to access the raw methods on
}

// VotingEscrowTokenTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type VotingEscrowTokenTransactorRaw struct {
	Contract *VotingEscrowTokenTransactor // Generic write-only contract binding to access the raw methods on
}

// NewVotingEscrowToken creates a new instance of VotingEscrowToken, bound to a specific deployed contract.
func NewVotingEscrowToken(address common.Address, backend bind.ContractBackend) (*VotingEscrowToken, error) {
	contract, err := bindVotingEscrowToken(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &VotingEscrowToken{VotingEscrowTokenCaller: VotingEscrowTokenCaller{contract: contract}, VotingEscrowTokenTransactor: VotingEscrowTokenTransactor{contract: contract}, VotingEscrowTokenFilterer: VotingEscrowTokenFilterer{contract: contract}}, nil
}

// NewVotingEscrowTokenCaller creates a new read-only instance of VotingEscrowToken, bound to a specific deployed contract.
func NewVotingEscrowTokenCaller(address common.Address, caller bind.ContractCaller) (*VotingEscrowTokenCaller, error) {
	contract, err := bindVotingEscrowToken(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &VotingEscrowTokenCaller{contract: contract}, nil
}

// NewVotingEscrowTokenTransactor creates a new write-only instance of VotingEscrowToken, bound to a specific deployed contract.
func NewVotingEscrowTokenTransactor(address common.Address, transactor bind.ContractTransactor) (*VotingEscrowTokenTransactor, error) {
	contract, err := bindVotingEscrowToken(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &VotingEscrowTokenTransactor{contract: contract}, nil
}

// NewVotingEscrowTokenFilterer creates a new log filterer instance of VotingEscrowToken, bound to a specific deployed contract.
func NewVotingEscrowTokenFilterer(address common.Address, filterer bind.ContractFilterer) (*VotingEscrowTokenFilterer, error) {
	contract, err := bindVotingEscrowToken(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &VotingEscrowTokenFilterer{contract: contract}, nil
}

// bindVotingEscrowToken binds a generic wrapper to an already deployed contract.
func bindVotingEscrowToken(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(VotingEscrowTokenABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_VotingEscrowToken *VotingEscrowTokenRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _VotingEscrowToken.Contract.VotingEscrowTokenCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_VotingEscrowToken *VotingEscrowTokenRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _VotingEscrowToken.Contract.VotingEscrowTokenTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_VotingEscrowToken *VotingEscrowTokenRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _VotingEscrowToken.Contract.VotingEscrowTokenTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_VotingEscrowToken *VotingEscrowTokenCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _VotingEscrowToken.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_VotingEscrowToken *VotingEscrowTokenTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _VotingEscrowToken.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_VotingEscrowToken *VotingEscrowTokenTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _VotingEscrowToken.Contract.contract.Transact(opts, method, params...)
}

// ACTIONCREATELOCK is a free data retrieval call binding the contract method 0x67e7a7cb.
//
// Solidity: function ACTION_CREATE_LOCK() view returns(uint256)
func (_VotingEscrowToken *VotingEscrowTokenCaller) ACTIONCREATELOCK(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _VotingEscrowToken.contract.Call(opts, &out, "ACTION_CREATE_LOCK")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// ACTIONCREATELOCK is a free data retrieval call binding the contract method 0x67e7a7cb.
//
// Solidity: function ACTION_CREATE_LOCK() view returns(uint256)
func (_VotingEscrowToken *VotingEscrowTokenSession) ACTIONCREATELOCK() (*big.Int, error) {
	return _VotingEscrowToken.Contract.ACTIONCREATELOCK(&_VotingEscrowToken.CallOpts)
}

// ACTIONCREATELOCK is a free data retrieval call binding the contract method 0x67e7a7cb.
//
// Solidity: function ACTION_CREATE_LOCK() view returns(uint256)
func (_VotingEscrowToken *VotingEscrowTokenCallerSession) ACTIONCREATELOCK() (*big.Int, error) {
	return _VotingEscrowToken.Contract.ACTIONCREATELOCK(&_VotingEscrowToken.CallOpts)
}

// ACTIONDEPOSITFOR is a free data retrieval call binding the contract method 0x00b79fd4.
//
// Solidity: function ACTION_DEPOSIT_FOR() view returns(uint256)
func (_VotingEscrowToken *VotingEscrowTokenCaller) ACTIONDEPOSITFOR(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _VotingEscrowToken.contract.Call(opts, &out, "ACTION_DEPOSIT_FOR")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// ACTIONDEPOSITFOR is a free data retrieval call binding the contract method 0x00b79fd4.
//
// Solidity: function ACTION_DEPOSIT_FOR() view returns(uint256)
func (_VotingEscrowToken *VotingEscrowTokenSession) ACTIONDEPOSITFOR() (*big.Int, error) {
	return _VotingEscrowToken.Contract.ACTIONDEPOSITFOR(&_VotingEscrowToken.CallOpts)
}

// ACTIONDEPOSITFOR is a free data retrieval call binding the contract method 0x00b79fd4.
//
// Solidity: function ACTION_DEPOSIT_FOR() view returns(uint256)
func (_VotingEscrowToken *VotingEscrowTokenCallerSession) ACTIONDEPOSITFOR() (*big.Int, error) {
	return _VotingEscrowToken.Contract.ACTIONDEPOSITFOR(&_VotingEscrowToken.CallOpts)
}

// ACTIONINCREASELOCKAMOUNT is a free data retrieval call binding the contract method 0xf2c7a81b.
//
// Solidity: function ACTION_INCREASE_LOCK_AMOUNT() view returns(uint256)
func (_VotingEscrowToken *VotingEscrowTokenCaller) ACTIONINCREASELOCKAMOUNT(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _VotingEscrowToken.contract.Call(opts, &out, "ACTION_INCREASE_LOCK_AMOUNT")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// ACTIONINCREASELOCKAMOUNT is a free data retrieval call binding the contract method 0xf2c7a81b.
//
// Solidity: function ACTION_INCREASE_LOCK_AMOUNT() view returns(uint256)
func (_VotingEscrowToken *VotingEscrowTokenSession) ACTIONINCREASELOCKAMOUNT() (*big.Int, error) {
	return _VotingEscrowToken.Contract.ACTIONINCREASELOCKAMOUNT(&_VotingEscrowToken.CallOpts)
}

// ACTIONINCREASELOCKAMOUNT is a free data retrieval call binding the contract method 0xf2c7a81b.
//
// Solidity: function ACTION_INCREASE_LOCK_AMOUNT() view returns(uint256)
func (_VotingEscrowToken *VotingEscrowTokenCallerSession) ACTIONINCREASELOCKAMOUNT() (*big.Int, error) {
	return _VotingEscrowToken.Contract.ACTIONINCREASELOCKAMOUNT(&_VotingEscrowToken.CallOpts)
}

// ACTIONINCREASEUNLOCKTIME is a free data retrieval call binding the contract method 0x02641632.
//
// Solidity: function ACTION_INCREASE_UNLOCK_TIME() view returns(uint256)
func (_VotingEscrowToken *VotingEscrowTokenCaller) ACTIONINCREASEUNLOCKTIME(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _VotingEscrowToken.contract.Call(opts, &out, "ACTION_INCREASE_UNLOCK_TIME")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// ACTIONINCREASEUNLOCKTIME is a free data retrieval call binding the contract method 0x02641632.
//
// Solidity: function ACTION_INCREASE_UNLOCK_TIME() view returns(uint256)
func (_VotingEscrowToken *VotingEscrowTokenSession) ACTIONINCREASEUNLOCKTIME() (*big.Int, error) {
	return _VotingEscrowToken.Contract.ACTIONINCREASEUNLOCKTIME(&_VotingEscrowToken.CallOpts)
}

// ACTIONINCREASEUNLOCKTIME is a free data retrieval call binding the contract method 0x02641632.
//
// Solidity: function ACTION_INCREASE_UNLOCK_TIME() view returns(uint256)
func (_VotingEscrowToken *VotingEscrowTokenCallerSession) ACTIONINCREASEUNLOCKTIME() (*big.Int, error) {
	return _VotingEscrowToken.Contract.ACTIONINCREASEUNLOCKTIME(&_VotingEscrowToken.CallOpts)
}

// MAXLOCK is a free data retrieval call binding the contract method 0x65a5d5f0.
//
// Solidity: function MAX_LOCK() view returns(uint256)
func (_VotingEscrowToken *VotingEscrowTokenCaller) MAXLOCK(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _VotingEscrowToken.contract.Call(opts, &out, "MAX_LOCK")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MAXLOCK is a free data retrieval call binding the contract method 0x65a5d5f0.
//
// Solidity: function MAX_LOCK() view returns(uint256)
func (_VotingEscrowToken *VotingEscrowTokenSession) MAXLOCK() (*big.Int, error) {
	return _VotingEscrowToken.Contract.MAXLOCK(&_VotingEscrowToken.CallOpts)
}

// MAXLOCK is a free data retrieval call binding the contract method 0x65a5d5f0.
//
// Solidity: function MAX_LOCK() view returns(uint256)
func (_VotingEscrowToken *VotingEscrowTokenCallerSession) MAXLOCK() (*big.Int, error) {
	return _VotingEscrowToken.Contract.MAXLOCK(&_VotingEscrowToken.CallOpts)
}

// MULTIPLIER is a free data retrieval call binding the contract method 0x059f8b16.
//
// Solidity: function MULTIPLIER() view returns(uint256)
func (_VotingEscrowToken *VotingEscrowTokenCaller) MULTIPLIER(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _VotingEscrowToken.contract.Call(opts, &out, "MULTIPLIER")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MULTIPLIER is a free data retrieval call binding the contract method 0x059f8b16.
//
// Solidity: function MULTIPLIER() view returns(uint256)
func (_VotingEscrowToken *VotingEscrowTokenSession) MULTIPLIER() (*big.Int, error) {
	return _VotingEscrowToken.Contract.MULTIPLIER(&_VotingEscrowToken.CallOpts)
}

// MULTIPLIER is a free data retrieval call binding the contract method 0x059f8b16.
//
// Solidity: function MULTIPLIER() view returns(uint256)
func (_VotingEscrowToken *VotingEscrowTokenCallerSession) MULTIPLIER() (*big.Int, error) {
	return _VotingEscrowToken.Contract.MULTIPLIER(&_VotingEscrowToken.CallOpts)
}

// WEEK is a free data retrieval call binding the contract method 0xf4359ce5.
//
// Solidity: function WEEK() view returns(uint256)
func (_VotingEscrowToken *VotingEscrowTokenCaller) WEEK(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _VotingEscrowToken.contract.Call(opts, &out, "WEEK")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// WEEK is a free data retrieval call binding the contract method 0xf4359ce5.
//
// Solidity: function WEEK() view returns(uint256)
func (_VotingEscrowToken *VotingEscrowTokenSession) WEEK() (*big.Int, error) {
	return _VotingEscrowToken.Contract.WEEK(&_VotingEscrowToken.CallOpts)
}

// WEEK is a free data retrieval call binding the contract method 0xf4359ce5.
//
// Solidity: function WEEK() view returns(uint256)
func (_VotingEscrowToken *VotingEscrowTokenCallerSession) WEEK() (*big.Int, error) {
	return _VotingEscrowToken.Contract.WEEK(&_VotingEscrowToken.CallOpts)
}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address _user) view returns(uint256)
func (_VotingEscrowToken *VotingEscrowTokenCaller) BalanceOf(opts *bind.CallOpts, _user common.Address) (*big.Int, error) {
	var out []interface{}
	err := _VotingEscrowToken.contract.Call(opts, &out, "balanceOf", _user)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address _user) view returns(uint256)
func (_VotingEscrowToken *VotingEscrowTokenSession) BalanceOf(_user common.Address) (*big.Int, error) {
	return _VotingEscrowToken.Contract.BalanceOf(&_VotingEscrowToken.CallOpts, _user)
}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address _user) view returns(uint256)
func (_VotingEscrowToken *VotingEscrowTokenCallerSession) BalanceOf(_user common.Address) (*big.Int, error) {
	return _VotingEscrowToken.Contract.BalanceOf(&_VotingEscrowToken.CallOpts, _user)
}

// BalanceOfAt is a free data retrieval call binding the contract method 0x4ee2cd7e.
//
// Solidity: function balanceOfAt(address _user, uint256 _blockNumber) view returns(uint256)
func (_VotingEscrowToken *VotingEscrowTokenCaller) BalanceOfAt(opts *bind.CallOpts, _user common.Address, _blockNumber *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _VotingEscrowToken.contract.Call(opts, &out, "balanceOfAt", _user, _blockNumber)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// BalanceOfAt is a free data retrieval call binding the contract method 0x4ee2cd7e.
//
// Solidity: function balanceOfAt(address _user, uint256 _blockNumber) view returns(uint256)
func (_VotingEscrowToken *VotingEscrowTokenSession) BalanceOfAt(_user common.Address, _blockNumber *big.Int) (*big.Int, error) {
	return _VotingEscrowToken.Contract.BalanceOfAt(&_VotingEscrowToken.CallOpts, _user, _blockNumber)
}

// BalanceOfAt is a free data retrieval call binding the contract method 0x4ee2cd7e.
//
// Solidity: function balanceOfAt(address _user, uint256 _blockNumber) view returns(uint256)
func (_VotingEscrowToken *VotingEscrowTokenCallerSession) BalanceOfAt(_user common.Address, _blockNumber *big.Int) (*big.Int, error) {
	return _VotingEscrowToken.Contract.BalanceOfAt(&_VotingEscrowToken.CallOpts, _user, _blockNumber)
}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() view returns(uint8)
func (_VotingEscrowToken *VotingEscrowTokenCaller) Decimals(opts *bind.CallOpts) (uint8, error) {
	var out []interface{}
	err := _VotingEscrowToken.contract.Call(opts, &out, "decimals")

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() view returns(uint8)
func (_VotingEscrowToken *VotingEscrowTokenSession) Decimals() (uint8, error) {
	return _VotingEscrowToken.Contract.Decimals(&_VotingEscrowToken.CallOpts)
}

// Decimals is a free data retrieval call binding the contract method 0x313ce567.
//
// Solidity: function decimals() view returns(uint8)
func (_VotingEscrowToken *VotingEscrowTokenCallerSession) Decimals() (uint8, error) {
	return _VotingEscrowToken.Contract.Decimals(&_VotingEscrowToken.CallOpts)
}

// Epoch is a free data retrieval call binding the contract method 0x900cf0cf.
//
// Solidity: function epoch() view returns(uint256)
func (_VotingEscrowToken *VotingEscrowTokenCaller) Epoch(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _VotingEscrowToken.contract.Call(opts, &out, "epoch")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Epoch is a free data retrieval call binding the contract method 0x900cf0cf.
//
// Solidity: function epoch() view returns(uint256)
func (_VotingEscrowToken *VotingEscrowTokenSession) Epoch() (*big.Int, error) {
	return _VotingEscrowToken.Contract.Epoch(&_VotingEscrowToken.CallOpts)
}

// Epoch is a free data retrieval call binding the contract method 0x900cf0cf.
//
// Solidity: function epoch() view returns(uint256)
func (_VotingEscrowToken *VotingEscrowTokenCallerSession) Epoch() (*big.Int, error) {
	return _VotingEscrowToken.Contract.Epoch(&_VotingEscrowToken.CallOpts)
}

// Locks is a free data retrieval call binding the contract method 0x5de9a137.
//
// Solidity: function locks(address ) view returns(int128 amount, uint256 end)
func (_VotingEscrowToken *VotingEscrowTokenCaller) Locks(opts *bind.CallOpts, arg0 common.Address) (struct {
	Amount *big.Int
	End    *big.Int
}, error) {
	var out []interface{}
	err := _VotingEscrowToken.contract.Call(opts, &out, "locks", arg0)

	outstruct := new(struct {
		Amount *big.Int
		End    *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Amount = *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	outstruct.End = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)

	return *outstruct, err

}

// Locks is a free data retrieval call binding the contract method 0x5de9a137.
//
// Solidity: function locks(address ) view returns(int128 amount, uint256 end)
func (_VotingEscrowToken *VotingEscrowTokenSession) Locks(arg0 common.Address) (struct {
	Amount *big.Int
	End    *big.Int
}, error) {
	return _VotingEscrowToken.Contract.Locks(&_VotingEscrowToken.CallOpts, arg0)
}

// Locks is a free data retrieval call binding the contract method 0x5de9a137.
//
// Solidity: function locks(address ) view returns(int128 amount, uint256 end)
func (_VotingEscrowToken *VotingEscrowTokenCallerSession) Locks(arg0 common.Address) (struct {
	Amount *big.Int
	End    *big.Int
}, error) {
	return _VotingEscrowToken.Contract.Locks(&_VotingEscrowToken.CallOpts, arg0)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_VotingEscrowToken *VotingEscrowTokenCaller) Name(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _VotingEscrowToken.contract.Call(opts, &out, "name")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_VotingEscrowToken *VotingEscrowTokenSession) Name() (string, error) {
	return _VotingEscrowToken.Contract.Name(&_VotingEscrowToken.CallOpts)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_VotingEscrowToken *VotingEscrowTokenCallerSession) Name() (string, error) {
	return _VotingEscrowToken.Contract.Name(&_VotingEscrowToken.CallOpts)
}

// PointHistory is a free data retrieval call binding the contract method 0x8ad4c447.
//
// Solidity: function pointHistory(uint256 ) view returns(int128 bias, int128 slope, uint256 timestamp, uint256 blockNumber)
func (_VotingEscrowToken *VotingEscrowTokenCaller) PointHistory(opts *bind.CallOpts, arg0 *big.Int) (struct {
	Bias        *big.Int
	Slope       *big.Int
	Timestamp   *big.Int
	BlockNumber *big.Int
}, error) {
	var out []interface{}
	err := _VotingEscrowToken.contract.Call(opts, &out, "pointHistory", arg0)

	outstruct := new(struct {
		Bias        *big.Int
		Slope       *big.Int
		Timestamp   *big.Int
		BlockNumber *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Bias = *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	outstruct.Slope = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.Timestamp = *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)
	outstruct.BlockNumber = *abi.ConvertType(out[3], new(*big.Int)).(**big.Int)

	return *outstruct, err

}

// PointHistory is a free data retrieval call binding the contract method 0x8ad4c447.
//
// Solidity: function pointHistory(uint256 ) view returns(int128 bias, int128 slope, uint256 timestamp, uint256 blockNumber)
func (_VotingEscrowToken *VotingEscrowTokenSession) PointHistory(arg0 *big.Int) (struct {
	Bias        *big.Int
	Slope       *big.Int
	Timestamp   *big.Int
	BlockNumber *big.Int
}, error) {
	return _VotingEscrowToken.Contract.PointHistory(&_VotingEscrowToken.CallOpts, arg0)
}

// PointHistory is a free data retrieval call binding the contract method 0x8ad4c447.
//
// Solidity: function pointHistory(uint256 ) view returns(int128 bias, int128 slope, uint256 timestamp, uint256 blockNumber)
func (_VotingEscrowToken *VotingEscrowTokenCallerSession) PointHistory(arg0 *big.Int) (struct {
	Bias        *big.Int
	Slope       *big.Int
	Timestamp   *big.Int
	BlockNumber *big.Int
}, error) {
	return _VotingEscrowToken.Contract.PointHistory(&_VotingEscrowToken.CallOpts, arg0)
}

// SlopeChanges is a free data retrieval call binding the contract method 0xf52a36f7.
//
// Solidity: function slopeChanges(uint256 ) view returns(int128)
func (_VotingEscrowToken *VotingEscrowTokenCaller) SlopeChanges(opts *bind.CallOpts, arg0 *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _VotingEscrowToken.contract.Call(opts, &out, "slopeChanges", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// SlopeChanges is a free data retrieval call binding the contract method 0xf52a36f7.
//
// Solidity: function slopeChanges(uint256 ) view returns(int128)
func (_VotingEscrowToken *VotingEscrowTokenSession) SlopeChanges(arg0 *big.Int) (*big.Int, error) {
	return _VotingEscrowToken.Contract.SlopeChanges(&_VotingEscrowToken.CallOpts, arg0)
}

// SlopeChanges is a free data retrieval call binding the contract method 0xf52a36f7.
//
// Solidity: function slopeChanges(uint256 ) view returns(int128)
func (_VotingEscrowToken *VotingEscrowTokenCallerSession) SlopeChanges(arg0 *big.Int) (*big.Int, error) {
	return _VotingEscrowToken.Contract.SlopeChanges(&_VotingEscrowToken.CallOpts, arg0)
}

// Supply is a free data retrieval call binding the contract method 0x047fc9aa.
//
// Solidity: function supply() view returns(uint256)
func (_VotingEscrowToken *VotingEscrowTokenCaller) Supply(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _VotingEscrowToken.contract.Call(opts, &out, "supply")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Supply is a free data retrieval call binding the contract method 0x047fc9aa.
//
// Solidity: function supply() view returns(uint256)
func (_VotingEscrowToken *VotingEscrowTokenSession) Supply() (*big.Int, error) {
	return _VotingEscrowToken.Contract.Supply(&_VotingEscrowToken.CallOpts)
}

// Supply is a free data retrieval call binding the contract method 0x047fc9aa.
//
// Solidity: function supply() view returns(uint256)
func (_VotingEscrowToken *VotingEscrowTokenCallerSession) Supply() (*big.Int, error) {
	return _VotingEscrowToken.Contract.Supply(&_VotingEscrowToken.CallOpts)
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_VotingEscrowToken *VotingEscrowTokenCaller) Symbol(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _VotingEscrowToken.contract.Call(opts, &out, "symbol")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_VotingEscrowToken *VotingEscrowTokenSession) Symbol() (string, error) {
	return _VotingEscrowToken.Contract.Symbol(&_VotingEscrowToken.CallOpts)
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_VotingEscrowToken *VotingEscrowTokenCallerSession) Symbol() (string, error) {
	return _VotingEscrowToken.Contract.Symbol(&_VotingEscrowToken.CallOpts)
}

// Token is a free data retrieval call binding the contract method 0xfc0c546a.
//
// Solidity: function token() view returns(address)
func (_VotingEscrowToken *VotingEscrowTokenCaller) Token(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _VotingEscrowToken.contract.Call(opts, &out, "token")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Token is a free data retrieval call binding the contract method 0xfc0c546a.
//
// Solidity: function token() view returns(address)
func (_VotingEscrowToken *VotingEscrowTokenSession) Token() (common.Address, error) {
	return _VotingEscrowToken.Contract.Token(&_VotingEscrowToken.CallOpts)
}

// Token is a free data retrieval call binding the contract method 0xfc0c546a.
//
// Solidity: function token() view returns(address)
func (_VotingEscrowToken *VotingEscrowTokenCallerSession) Token() (common.Address, error) {
	return _VotingEscrowToken.Contract.Token(&_VotingEscrowToken.CallOpts)
}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() view returns(uint256)
func (_VotingEscrowToken *VotingEscrowTokenCaller) TotalSupply(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _VotingEscrowToken.contract.Call(opts, &out, "totalSupply")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() view returns(uint256)
func (_VotingEscrowToken *VotingEscrowTokenSession) TotalSupply() (*big.Int, error) {
	return _VotingEscrowToken.Contract.TotalSupply(&_VotingEscrowToken.CallOpts)
}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() view returns(uint256)
func (_VotingEscrowToken *VotingEscrowTokenCallerSession) TotalSupply() (*big.Int, error) {
	return _VotingEscrowToken.Contract.TotalSupply(&_VotingEscrowToken.CallOpts)
}

// TotalSupplyAt is a free data retrieval call binding the contract method 0x981b24d0.
//
// Solidity: function totalSupplyAt(uint256 _blockNumber) view returns(uint256)
func (_VotingEscrowToken *VotingEscrowTokenCaller) TotalSupplyAt(opts *bind.CallOpts, _blockNumber *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _VotingEscrowToken.contract.Call(opts, &out, "totalSupplyAt", _blockNumber)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TotalSupplyAt is a free data retrieval call binding the contract method 0x981b24d0.
//
// Solidity: function totalSupplyAt(uint256 _blockNumber) view returns(uint256)
func (_VotingEscrowToken *VotingEscrowTokenSession) TotalSupplyAt(_blockNumber *big.Int) (*big.Int, error) {
	return _VotingEscrowToken.Contract.TotalSupplyAt(&_VotingEscrowToken.CallOpts, _blockNumber)
}

// TotalSupplyAt is a free data retrieval call binding the contract method 0x981b24d0.
//
// Solidity: function totalSupplyAt(uint256 _blockNumber) view returns(uint256)
func (_VotingEscrowToken *VotingEscrowTokenCallerSession) TotalSupplyAt(_blockNumber *big.Int) (*big.Int, error) {
	return _VotingEscrowToken.Contract.TotalSupplyAt(&_VotingEscrowToken.CallOpts, _blockNumber)
}

// UserPointEpoch is a free data retrieval call binding the contract method 0x81fc83bb.
//
// Solidity: function userPointEpoch(address ) view returns(uint256)
func (_VotingEscrowToken *VotingEscrowTokenCaller) UserPointEpoch(opts *bind.CallOpts, arg0 common.Address) (*big.Int, error) {
	var out []interface{}
	err := _VotingEscrowToken.contract.Call(opts, &out, "userPointEpoch", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// UserPointEpoch is a free data retrieval call binding the contract method 0x81fc83bb.
//
// Solidity: function userPointEpoch(address ) view returns(uint256)
func (_VotingEscrowToken *VotingEscrowTokenSession) UserPointEpoch(arg0 common.Address) (*big.Int, error) {
	return _VotingEscrowToken.Contract.UserPointEpoch(&_VotingEscrowToken.CallOpts, arg0)
}

// UserPointEpoch is a free data retrieval call binding the contract method 0x81fc83bb.
//
// Solidity: function userPointEpoch(address ) view returns(uint256)
func (_VotingEscrowToken *VotingEscrowTokenCallerSession) UserPointEpoch(arg0 common.Address) (*big.Int, error) {
	return _VotingEscrowToken.Contract.UserPointEpoch(&_VotingEscrowToken.CallOpts, arg0)
}

// UserPointHistory is a free data retrieval call binding the contract method 0x34d901a4.
//
// Solidity: function userPointHistory(address , uint256 ) view returns(int128 bias, int128 slope, uint256 timestamp, uint256 blockNumber)
func (_VotingEscrowToken *VotingEscrowTokenCaller) UserPointHistory(opts *bind.CallOpts, arg0 common.Address, arg1 *big.Int) (struct {
	Bias        *big.Int
	Slope       *big.Int
	Timestamp   *big.Int
	BlockNumber *big.Int
}, error) {
	var out []interface{}
	err := _VotingEscrowToken.contract.Call(opts, &out, "userPointHistory", arg0, arg1)

	outstruct := new(struct {
		Bias        *big.Int
		Slope       *big.Int
		Timestamp   *big.Int
		BlockNumber *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Bias = *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	outstruct.Slope = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.Timestamp = *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)
	outstruct.BlockNumber = *abi.ConvertType(out[3], new(*big.Int)).(**big.Int)

	return *outstruct, err

}

// UserPointHistory is a free data retrieval call binding the contract method 0x34d901a4.
//
// Solidity: function userPointHistory(address , uint256 ) view returns(int128 bias, int128 slope, uint256 timestamp, uint256 blockNumber)
func (_VotingEscrowToken *VotingEscrowTokenSession) UserPointHistory(arg0 common.Address, arg1 *big.Int) (struct {
	Bias        *big.Int
	Slope       *big.Int
	Timestamp   *big.Int
	BlockNumber *big.Int
}, error) {
	return _VotingEscrowToken.Contract.UserPointHistory(&_VotingEscrowToken.CallOpts, arg0, arg1)
}

// UserPointHistory is a free data retrieval call binding the contract method 0x34d901a4.
//
// Solidity: function userPointHistory(address , uint256 ) view returns(int128 bias, int128 slope, uint256 timestamp, uint256 blockNumber)
func (_VotingEscrowToken *VotingEscrowTokenCallerSession) UserPointHistory(arg0 common.Address, arg1 *big.Int) (struct {
	Bias        *big.Int
	Slope       *big.Int
	Timestamp   *big.Int
	BlockNumber *big.Int
}, error) {
	return _VotingEscrowToken.Contract.UserPointHistory(&_VotingEscrowToken.CallOpts, arg0, arg1)
}

// Checkpoint is a paid mutator transaction binding the contract method 0xc2c4c5c1.
//
// Solidity: function checkpoint() returns()
func (_VotingEscrowToken *VotingEscrowTokenTransactor) Checkpoint(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _VotingEscrowToken.contract.Transact(opts, "checkpoint")
}

// Checkpoint is a paid mutator transaction binding the contract method 0xc2c4c5c1.
//
// Solidity: function checkpoint() returns()
func (_VotingEscrowToken *VotingEscrowTokenSession) Checkpoint() (*types.Transaction, error) {
	return _VotingEscrowToken.Contract.Checkpoint(&_VotingEscrowToken.TransactOpts)
}

// Checkpoint is a paid mutator transaction binding the contract method 0xc2c4c5c1.
//
// Solidity: function checkpoint() returns()
func (_VotingEscrowToken *VotingEscrowTokenTransactorSession) Checkpoint() (*types.Transaction, error) {
	return _VotingEscrowToken.Contract.Checkpoint(&_VotingEscrowToken.TransactOpts)
}

// CreateLock is a paid mutator transaction binding the contract method 0xb52c05fe.
//
// Solidity: function createLock(uint256 _amount, uint256 _unlockTime) returns()
func (_VotingEscrowToken *VotingEscrowTokenTransactor) CreateLock(opts *bind.TransactOpts, _amount *big.Int, _unlockTime *big.Int) (*types.Transaction, error) {
	return _VotingEscrowToken.contract.Transact(opts, "createLock", _amount, _unlockTime)
}

// CreateLock is a paid mutator transaction binding the contract method 0xb52c05fe.
//
// Solidity: function createLock(uint256 _amount, uint256 _unlockTime) returns()
func (_VotingEscrowToken *VotingEscrowTokenSession) CreateLock(_amount *big.Int, _unlockTime *big.Int) (*types.Transaction, error) {
	return _VotingEscrowToken.Contract.CreateLock(&_VotingEscrowToken.TransactOpts, _amount, _unlockTime)
}

// CreateLock is a paid mutator transaction binding the contract method 0xb52c05fe.
//
// Solidity: function createLock(uint256 _amount, uint256 _unlockTime) returns()
func (_VotingEscrowToken *VotingEscrowTokenTransactorSession) CreateLock(_amount *big.Int, _unlockTime *big.Int) (*types.Transaction, error) {
	return _VotingEscrowToken.Contract.CreateLock(&_VotingEscrowToken.TransactOpts, _amount, _unlockTime)
}

// DepositFor is a paid mutator transaction binding the contract method 0x2f4f21e2.
//
// Solidity: function depositFor(address _for, uint256 _amount) returns()
func (_VotingEscrowToken *VotingEscrowTokenTransactor) DepositFor(opts *bind.TransactOpts, _for common.Address, _amount *big.Int) (*types.Transaction, error) {
	return _VotingEscrowToken.contract.Transact(opts, "depositFor", _for, _amount)
}

// DepositFor is a paid mutator transaction binding the contract method 0x2f4f21e2.
//
// Solidity: function depositFor(address _for, uint256 _amount) returns()
func (_VotingEscrowToken *VotingEscrowTokenSession) DepositFor(_for common.Address, _amount *big.Int) (*types.Transaction, error) {
	return _VotingEscrowToken.Contract.DepositFor(&_VotingEscrowToken.TransactOpts, _for, _amount)
}

// DepositFor is a paid mutator transaction binding the contract method 0x2f4f21e2.
//
// Solidity: function depositFor(address _for, uint256 _amount) returns()
func (_VotingEscrowToken *VotingEscrowTokenTransactorSession) DepositFor(_for common.Address, _amount *big.Int) (*types.Transaction, error) {
	return _VotingEscrowToken.Contract.DepositFor(&_VotingEscrowToken.TransactOpts, _for, _amount)
}

// IncreaseLockAmount is a paid mutator transaction binding the contract method 0x403f4447.
//
// Solidity: function increaseLockAmount(uint256 _amount) returns()
func (_VotingEscrowToken *VotingEscrowTokenTransactor) IncreaseLockAmount(opts *bind.TransactOpts, _amount *big.Int) (*types.Transaction, error) {
	return _VotingEscrowToken.contract.Transact(opts, "increaseLockAmount", _amount)
}

// IncreaseLockAmount is a paid mutator transaction binding the contract method 0x403f4447.
//
// Solidity: function increaseLockAmount(uint256 _amount) returns()
func (_VotingEscrowToken *VotingEscrowTokenSession) IncreaseLockAmount(_amount *big.Int) (*types.Transaction, error) {
	return _VotingEscrowToken.Contract.IncreaseLockAmount(&_VotingEscrowToken.TransactOpts, _amount)
}

// IncreaseLockAmount is a paid mutator transaction binding the contract method 0x403f4447.
//
// Solidity: function increaseLockAmount(uint256 _amount) returns()
func (_VotingEscrowToken *VotingEscrowTokenTransactorSession) IncreaseLockAmount(_amount *big.Int) (*types.Transaction, error) {
	return _VotingEscrowToken.Contract.IncreaseLockAmount(&_VotingEscrowToken.TransactOpts, _amount)
}

// IncreaseUnlockTime is a paid mutator transaction binding the contract method 0x7c616fe6.
//
// Solidity: function increaseUnlockTime(uint256 _newUnlockTime) returns()
func (_VotingEscrowToken *VotingEscrowTokenTransactor) IncreaseUnlockTime(opts *bind.TransactOpts, _newUnlockTime *big.Int) (*types.Transaction, error) {
	return _VotingEscrowToken.contract.Transact(opts, "increaseUnlockTime", _newUnlockTime)
}

// IncreaseUnlockTime is a paid mutator transaction binding the contract method 0x7c616fe6.
//
// Solidity: function increaseUnlockTime(uint256 _newUnlockTime) returns()
func (_VotingEscrowToken *VotingEscrowTokenSession) IncreaseUnlockTime(_newUnlockTime *big.Int) (*types.Transaction, error) {
	return _VotingEscrowToken.Contract.IncreaseUnlockTime(&_VotingEscrowToken.TransactOpts, _newUnlockTime)
}

// IncreaseUnlockTime is a paid mutator transaction binding the contract method 0x7c616fe6.
//
// Solidity: function increaseUnlockTime(uint256 _newUnlockTime) returns()
func (_VotingEscrowToken *VotingEscrowTokenTransactorSession) IncreaseUnlockTime(_newUnlockTime *big.Int) (*types.Transaction, error) {
	return _VotingEscrowToken.Contract.IncreaseUnlockTime(&_VotingEscrowToken.TransactOpts, _newUnlockTime)
}

// Withdraw is a paid mutator transaction binding the contract method 0x3ccfd60b.
//
// Solidity: function withdraw() returns()
func (_VotingEscrowToken *VotingEscrowTokenTransactor) Withdraw(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _VotingEscrowToken.contract.Transact(opts, "withdraw")
}

// Withdraw is a paid mutator transaction binding the contract method 0x3ccfd60b.
//
// Solidity: function withdraw() returns()
func (_VotingEscrowToken *VotingEscrowTokenSession) Withdraw() (*types.Transaction, error) {
	return _VotingEscrowToken.Contract.Withdraw(&_VotingEscrowToken.TransactOpts)
}

// Withdraw is a paid mutator transaction binding the contract method 0x3ccfd60b.
//
// Solidity: function withdraw() returns()
func (_VotingEscrowToken *VotingEscrowTokenTransactorSession) Withdraw() (*types.Transaction, error) {
	return _VotingEscrowToken.Contract.Withdraw(&_VotingEscrowToken.TransactOpts)
}

// VotingEscrowTokenDepositedIterator is returned from FilterDeposited and is used to iterate over the raw logs and unpacked data for Deposited events raised by the VotingEscrowToken contract.
type VotingEscrowTokenDepositedIterator struct {
	Event *VotingEscrowTokenDeposited // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *VotingEscrowTokenDepositedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(VotingEscrowTokenDeposited)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(VotingEscrowTokenDeposited)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *VotingEscrowTokenDepositedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *VotingEscrowTokenDepositedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// VotingEscrowTokenDeposited represents a Deposited event raised by the VotingEscrowToken contract.
type VotingEscrowTokenDeposited struct {
	Locker    common.Address
	Value     *big.Int
	LockTime  *big.Int
	LockType  *big.Int
	Timestamp *big.Int
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterDeposited is a free log retrieval operation binding the contract event 0xe3b53cd1a44fbf11535e145d80b8ef1ed6d57a73bf5daa7e939b6b01657d6549.
//
// Solidity: event Deposited(address indexed locker, uint256 value, uint256 indexed lockTime, uint256 lockType, uint256 timestamp)
func (_VotingEscrowToken *VotingEscrowTokenFilterer) FilterDeposited(opts *bind.FilterOpts, locker []common.Address, lockTime []*big.Int) (*VotingEscrowTokenDepositedIterator, error) {

	var lockerRule []interface{}
	for _, lockerItem := range locker {
		lockerRule = append(lockerRule, lockerItem)
	}

	var lockTimeRule []interface{}
	for _, lockTimeItem := range lockTime {
		lockTimeRule = append(lockTimeRule, lockTimeItem)
	}

	logs, sub, err := _VotingEscrowToken.contract.FilterLogs(opts, "Deposited", lockerRule, lockTimeRule)
	if err != nil {
		return nil, err
	}
	return &VotingEscrowTokenDepositedIterator{contract: _VotingEscrowToken.contract, event: "Deposited", logs: logs, sub: sub}, nil
}

// WatchDeposited is a free log subscription operation binding the contract event 0xe3b53cd1a44fbf11535e145d80b8ef1ed6d57a73bf5daa7e939b6b01657d6549.
//
// Solidity: event Deposited(address indexed locker, uint256 value, uint256 indexed lockTime, uint256 lockType, uint256 timestamp)
func (_VotingEscrowToken *VotingEscrowTokenFilterer) WatchDeposited(opts *bind.WatchOpts, sink chan<- *VotingEscrowTokenDeposited, locker []common.Address, lockTime []*big.Int) (event.Subscription, error) {

	var lockerRule []interface{}
	for _, lockerItem := range locker {
		lockerRule = append(lockerRule, lockerItem)
	}

	var lockTimeRule []interface{}
	for _, lockTimeItem := range lockTime {
		lockTimeRule = append(lockTimeRule, lockTimeItem)
	}

	logs, sub, err := _VotingEscrowToken.contract.WatchLogs(opts, "Deposited", lockerRule, lockTimeRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(VotingEscrowTokenDeposited)
				if err := _VotingEscrowToken.contract.UnpackLog(event, "Deposited", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseDeposited is a log parse operation binding the contract event 0xe3b53cd1a44fbf11535e145d80b8ef1ed6d57a73bf5daa7e939b6b01657d6549.
//
// Solidity: event Deposited(address indexed locker, uint256 value, uint256 indexed lockTime, uint256 lockType, uint256 timestamp)
func (_VotingEscrowToken *VotingEscrowTokenFilterer) ParseDeposited(log types.Log) (*VotingEscrowTokenDeposited, error) {
	event := new(VotingEscrowTokenDeposited)
	if err := _VotingEscrowToken.contract.UnpackLog(event, "Deposited", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// VotingEscrowTokenSupplyChangedIterator is returned from FilterSupplyChanged and is used to iterate over the raw logs and unpacked data for SupplyChanged events raised by the VotingEscrowToken contract.
type VotingEscrowTokenSupplyChangedIterator struct {
	Event *VotingEscrowTokenSupplyChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *VotingEscrowTokenSupplyChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(VotingEscrowTokenSupplyChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(VotingEscrowTokenSupplyChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *VotingEscrowTokenSupplyChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *VotingEscrowTokenSupplyChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// VotingEscrowTokenSupplyChanged represents a SupplyChanged event raised by the VotingEscrowToken contract.
type VotingEscrowTokenSupplyChanged struct {
	PreviousSupply *big.Int
	Supply         *big.Int
	Raw            types.Log // Blockchain specific contextual infos
}

// FilterSupplyChanged is a free log retrieval operation binding the contract event 0xed89e864eaa767d73408242ff6a09be53504bda6578087e3cc94dc198390488c.
//
// Solidity: event SupplyChanged(uint256 previousSupply, uint256 supply)
func (_VotingEscrowToken *VotingEscrowTokenFilterer) FilterSupplyChanged(opts *bind.FilterOpts) (*VotingEscrowTokenSupplyChangedIterator, error) {

	logs, sub, err := _VotingEscrowToken.contract.FilterLogs(opts, "SupplyChanged")
	if err != nil {
		return nil, err
	}
	return &VotingEscrowTokenSupplyChangedIterator{contract: _VotingEscrowToken.contract, event: "SupplyChanged", logs: logs, sub: sub}, nil
}

// WatchSupplyChanged is a free log subscription operation binding the contract event 0xed89e864eaa767d73408242ff6a09be53504bda6578087e3cc94dc198390488c.
//
// Solidity: event SupplyChanged(uint256 previousSupply, uint256 supply)
func (_VotingEscrowToken *VotingEscrowTokenFilterer) WatchSupplyChanged(opts *bind.WatchOpts, sink chan<- *VotingEscrowTokenSupplyChanged) (event.Subscription, error) {

	logs, sub, err := _VotingEscrowToken.contract.WatchLogs(opts, "SupplyChanged")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(VotingEscrowTokenSupplyChanged)
				if err := _VotingEscrowToken.contract.UnpackLog(event, "SupplyChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseSupplyChanged is a log parse operation binding the contract event 0xed89e864eaa767d73408242ff6a09be53504bda6578087e3cc94dc198390488c.
//
// Solidity: event SupplyChanged(uint256 previousSupply, uint256 supply)
func (_VotingEscrowToken *VotingEscrowTokenFilterer) ParseSupplyChanged(log types.Log) (*VotingEscrowTokenSupplyChanged, error) {
	event := new(VotingEscrowTokenSupplyChanged)
	if err := _VotingEscrowToken.contract.UnpackLog(event, "SupplyChanged", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// VotingEscrowTokenWithdrawnIterator is returned from FilterWithdrawn and is used to iterate over the raw logs and unpacked data for Withdrawn events raised by the VotingEscrowToken contract.
type VotingEscrowTokenWithdrawnIterator struct {
	Event *VotingEscrowTokenWithdrawn // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *VotingEscrowTokenWithdrawnIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(VotingEscrowTokenWithdrawn)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(VotingEscrowTokenWithdrawn)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *VotingEscrowTokenWithdrawnIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *VotingEscrowTokenWithdrawnIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// VotingEscrowTokenWithdrawn represents a Withdrawn event raised by the VotingEscrowToken contract.
type VotingEscrowTokenWithdrawn struct {
	Locker    common.Address
	Value     *big.Int
	Timestamp *big.Int
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterWithdrawn is a free log retrieval operation binding the contract event 0x92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc6.
//
// Solidity: event Withdrawn(address indexed locker, uint256 value, uint256 timestamp)
func (_VotingEscrowToken *VotingEscrowTokenFilterer) FilterWithdrawn(opts *bind.FilterOpts, locker []common.Address) (*VotingEscrowTokenWithdrawnIterator, error) {

	var lockerRule []interface{}
	for _, lockerItem := range locker {
		lockerRule = append(lockerRule, lockerItem)
	}

	logs, sub, err := _VotingEscrowToken.contract.FilterLogs(opts, "Withdrawn", lockerRule)
	if err != nil {
		return nil, err
	}
	return &VotingEscrowTokenWithdrawnIterator{contract: _VotingEscrowToken.contract, event: "Withdrawn", logs: logs, sub: sub}, nil
}

// WatchWithdrawn is a free log subscription operation binding the contract event 0x92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc6.
//
// Solidity: event Withdrawn(address indexed locker, uint256 value, uint256 timestamp)
func (_VotingEscrowToken *VotingEscrowTokenFilterer) WatchWithdrawn(opts *bind.WatchOpts, sink chan<- *VotingEscrowTokenWithdrawn, locker []common.Address) (event.Subscription, error) {

	var lockerRule []interface{}
	for _, lockerItem := range locker {
		lockerRule = append(lockerRule, lockerItem)
	}

	logs, sub, err := _VotingEscrowToken.contract.WatchLogs(opts, "Withdrawn", lockerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(VotingEscrowTokenWithdrawn)
				if err := _VotingEscrowToken.contract.UnpackLog(event, "Withdrawn", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseWithdrawn is a log parse operation binding the contract event 0x92ccf450a286a957af52509bc1c9939d1a6a481783e142e41e2499f0bb66ebc6.
//
// Solidity: event Withdrawn(address indexed locker, uint256 value, uint256 timestamp)
func (_VotingEscrowToken *VotingEscrowTokenFilterer) ParseWithdrawn(log types.Log) (*VotingEscrowTokenWithdrawn, error) {
	event := new(VotingEscrowTokenWithdrawn)
	if err := _VotingEscrowToken.contract.UnpackLog(event, "Withdrawn", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
